@{
    Layout = null;
}
@using SWP_template.Models
@model RegisterViewModel

<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>SB Admin 2 - Register</title>

    <!-- Custom fonts for this template-->
    <link href="~/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
          rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="~/css/sb-admin-2.min.css" rel="stylesheet">

</head>

<body class="bg-gradient-primary">

    <div class="container">

        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="row">
                    <div class="col-lg-5 d-none d-lg-block bg-register-image"></div>
                    <div class="col-lg-7">
                        <div class="p-5">
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-4">Create an Admin Account!</h1>
                            </div>
                            <h5 class="text-danger">@ViewBag.fail</h5>
                            <form asp-controller="AdminSignup" asp-action="AdminSignup" method="post">
                                <div class="form-group">
                                        @Html.LabelFor(m => m.Name, new { @class = "sr-only",@for = "Name" })
                                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control name",id = "name", name = "name",placeholder ="Name", autofocus ="", required="required" })
                                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                   @* <input type="email" class="form-control form-control-user" id="exampleInputEmail"
                                           placeholder="Email Address">*@
                                    @Html.LabelFor(m => m.Account, new { @class = "sr-only",@for = "inputAccount" })
                                    @Html.TextBoxFor(m => m.Account, new { @class = "form-control form-control-user",id = "inputAccount", name = "account",placeholder ="User account", autofocus ="", required="required" })
                                    @Html.ValidationMessageFor(m => m.Account, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, new { @class = "sr-only", @for = "inputEmail" })
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control email", id = "inputEmail" , name = "email", placeholder = "Email address", autofocus = "" , type = "email", required="required"})
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-6 mb-3 mb-sm-0">
                                       @* <input type="password" class="form-control form-control-user"
                                               id="exampleInputPassword" placeholder="Password">*@
                                        @Html.LabelFor(m => m.Password, new { @class = "sr-only", @for = "inputPassword" })
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-user", id = "inputPassword",name = "Password", placeholder = "Password", type="password", required="required" })
                                        @Html.ValidationMessageFor(m => m.Password)
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "sr-only", @for = "inputPassword" })
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-control-user",
                                        id = "inputPassword", name = "ConfirmPassword", placeholder = "Confirm Password", type="password" , required="required"})
                                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                    </div>
                                </div>


                                <button type="submit" class="btn btn-primary btn-user btn-block">
                                    Register Account
                                </button>

                            </form>

                            <hr>
                            <div class="text-center">
                                <a class="small" href="forgot-password.html">Forgot Password?</a>
                            </div>
                            <div class="text-center">
                                <a class="small" href="@Url.Action("AdminLogin","AdminLogin")">Already have an account? Login!</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="~/vendor/jquery/jquery.min.js"></script>
    <script src="~/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="~/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="~/js/sb-admin-2.min.js"></script>

</body>

</html>